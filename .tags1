!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Impl	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^class Model::Impl$/;"	class	line:17	class:Model	file:
jointIndexingMap	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^    std::unordered_map<JointName, int> jointIndexingMap;$/;"	member	line:23	class:Model::Impl	file:
jointNames	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^        std::optional<std::vector<std::string>> jointNames;$/;"	member	line:27	struct:Model::Impl::__anon1	file:
scopedJointNames	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^        std::optional<std::vector<std::string>> scopedJointNames;$/;"	member	line:28	struct:Model::Impl::__anon1	file:
buffers	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^    } buffers;$/;"	member	line:29	class:Model::Impl	typeref:struct:Model::Impl::__anon1	file:
monopod_sdk	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^    std::shared_ptr<monopod_drivers::Monopod> monopod_sdk;$/;"	member	line:42	class:Model::Impl	file:
Model	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^Model::Model()$/;"	function	line:45	class:Model	signature:()
id	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^uint64_t Model::id() const$/;"	function	line:73	class:Model	signature:() const
valid	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^bool Model::valid() const$/;"	function	line:82	class:Model	signature:() const
name	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^std::string Model::name() const$/;"	function	line:91	class:Model	signature:() const
dofs	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^size_t Model::dofs(const std::vector<std::string>& jointNames) const$/;"	function	line:97	class:Model	signature:(const std::vector<std::string>& jointNames) const
jointNames	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^std::vector<std::string> Model::jointNames(const bool scoped) const$/;"	function	line:111	class:Model	signature:(const bool scoped) const
getJoint	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^scenario::core::JointPtr Model::getJoint(const std::string& jointName) const$/;"	function	line:135	class:Model	signature:(const std::string& jointName) const
joints	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^Model::joints(const std::vector<std::string>& jointNames) const$/;"	function	line:150	class:Model	signature:(const std::vector<std::string>& jointNames) const
setJointControlMode	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^bool Model::setJointControlMode(const scenario::core::JointControlMode mode,$/;"	function	line:163	class:Model	signature:(const scenario::core::JointControlMode mode, const std::vector<std::string>& jointNames)
jointPositions	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^Model::jointPositions(const std::vector<std::string>& jointNames) const$/;"	function	line:179	class:Model	signature:(const std::vector<std::string>& jointNames) const
jointVelocities	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^Model::jointVelocities(const std::vector<std::string>& jointNames) const$/;"	function	line:189	class:Model	signature:(const std::vector<std::string>& jointNames) const
jointAccelerations	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^Model::jointAccelerations(const std::vector<std::string>& jointNames) const$/;"	function	line:199	class:Model	signature:(const std::vector<std::string>& jointNames) const
setJointGeneralizedForceTargets	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^bool Model::setJointGeneralizedForceTargets($/;"	function	line:208	class:Model	signature:( const std::vector<double>& forces, const std::vector<std::string>& jointNames)
jointGeneralizedForceTargets	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^std::vector<double> Model::jointGeneralizedForceTargets($/;"	function	line:219	class:Model	signature:( const std::vector<std::string>& jointNames) const
getJointDataSerialized	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^std::vector<double> Model::Impl::getJointDataSerialized($/;"	function	line:233	class:Model::Impl	signature:( const Model* model, const std::vector<std::string>& jointNames, std::function<std::vector<double>(core::JointPtr)> getJointData)
setJointDataSerialized	/home/capstone/Documents/Repos/SIM/src/monopod/src/Model.cpp	/^bool Model::Impl::setJointDataSerialized($/;"	function	line:255	class:Model::Impl	signature:( Model* model, const std::vector<double>& data, const std::vector<std::string>& jointNames, std::function<bool(core::JointPtr, const std::vector<double>)> setJointData)
